// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	repositories {
		jcenter()

		maven {
			url "http://mvn.leancloud.cn/nexus/content/repositories/releases"
		}

	}
	dependencies {
		classpath 'com.android.tools.build:gradle:2.2.3'

		// NOTE: Do not place your application dependencies here; they belong
		// in the individual module build.gradle files
	}
}

allprojects {
	repositories {
		jcenter()

		maven {
			url "http://mvn.leancloud.cn/nexus/content/repositories/releases"
		}
	}
}

ext {
	buildToolsVersion = "25.0.3"
	compileSdkVersion = 25
	minSdkVersion = 14
	targetSdkVersion = 25
	versionCode = 101
	versionName = "1.0.1"
	applicationId = "com.timedancing.easyfirewall"
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {
	subproject ->
		afterEvaluate {
			if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
				if (!android.compileSdkVersion) {
					android {
						compileSdkVersion rootProject.ext.compileSdkVersion
						useLibrary 'org.apache.http.legacy'
					}
				}
				android {
					buildToolsVersion rootProject.ext.buildToolsVersion
					lintOptions.abortOnError false

					packagingOptions {
						exclude 'META-INF/NOTICE'
						exclude 'META-INF/LICENSE'
						exclude 'META-INF/DEPENDENCIES'
					}
				}

				dependencies {
					compile fileTree(dir: 'libs', exclude: 'android-support-*.jar', include: '*.jar')
				}
			}
		}
		project.plugins.whenPluginAdded { plugin ->
			if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
				project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
			} else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
				project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
			}
		}
}
task clean(type: Delete) {
	delete rootProject.buildDir
}
